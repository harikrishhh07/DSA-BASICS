#include <stdio.h>
#define N 5  

void push(int stack[], int *top) {
    int data;
    if (*top == N - 1) {
        printf("Stack Overflow!\n");
    } else {
        printf("Enter the element to be pushed: ");
        scanf("%d", &data);
        (*top)++;
        stack[*top] = data;
        printf("%d pushed successfully!\n", data);
    }
}

void pop(int stack[], int *top) {
    if (*top == -1) {
        printf("Stack Underflow!\n");
    } else {
        printf("%d popped successfully!\n", stack[*top]);
        (*top)--;
    }
}

void peek(int stack[], int top) {
    if (top == -1) {
        printf("Stack is empty!\n");
    } else {
        printf("Top element is: %d\n", stack[top]);
    }
}

void display(int stack[], int top) {
    if (top == -1) {
        printf("Stack is empty!\n");
    } else {
        printf("Stack elements: ");
        for (int i = top; i >= 0; i--) {
            printf("%d ", stack[i]);
        }
        printf("\n");
    }
}

int main() {
    int stack[N];
    int top = -1;
    int choice;

    while (1) {
        printf("\n--- Stack Menu ---\n");
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                push(stack, &top);
                break;
            case 2:
                pop(stack, &top);
                break;
            case 3:
                peek(stack, top);
                break;
            case 4:
                display(stack, top);
                break;
            case 5:
                return 0;
            default:
                printf("Invalid choice! Try again.\n");
        }
    }

    return 0;
}
